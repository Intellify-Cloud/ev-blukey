@charset "utf-8";

// =================================================================
// 1. IMPORT YOUR CUSTOM VARIABLES FIRST
// This is the most critical step. Your variables must be defined
// before Bootstrap's core files are imported to override defaults.
// =================================================================
@import "base/variables.scss";
@import "base/mixins.scss"; // Assuming this file also contains reusable code

// =================================================================
// 2. IMPORT BOOTSTRAP'S CORE
// This single import is sufficient to bring in all of Bootstrap's
// core functionality, including variables, functions, and mixins.
// =================================================================
@import "bootstrap/scss/bootstrap";

// =================================================================
// 3. DEFINE ADDITIONAL CUSTOM VARIABLES
// These are not overrides but variables specific to your project.
// You could also place these in your 'base/variables.scss' file.
// =================================================================
$header-image: "./img/blue-key-home-finance-hero.jpg";
$contact-image: "./img/contact.png";

// =================================================================
// 4. IMPORT YOUR CUSTOM LAYOUTS, COMPONENTS, AND PAGES
// These files will use the variables defined in steps 1 and 2.
// =================================================================
@import "base/page.scss";

@import "components/buttons.scss";
@import "components/navbar.scss";
@import "components/client-scroll.scss";

@import "layout/hero.scss";
@import "layout/services.scss";
@import "layout/portfolio.scss";
@import "layout/team.scss";
@import "layout/contact.scss";
@import "layout/footer.scss";
@import "layout/clients.scss";
@import "layout/textblock.scss";
@import "layout/textblock-lite.scss";
@import "layout/testimonials.scss";
@import "layout/calculators.scss";

// =================================================================
// 5. DEFINE ROOT-LEVEL STYLES
// These styles apply directly to global elements.
// =================================================================
body {
  overflow-x: hidden;
  font-family: 'Comfortaa', cursive;
  -webkit-tap-highlight-color: $primary;
  background-color: $body-bg;
  color: $body-color;
}

.post {
  max-width: 750px;
  margin-top: 150px;
}